{"version":3,"sources":["webpack://projectstorm/react-canvas-core/webpack/universalModuleDefinition","webpack://projectstorm/react-canvas-core/./src/CanvasEngine.ts","webpack://projectstorm/react-canvas-core/./src/Toolkit.ts","webpack://projectstorm/react-canvas-core/./src/actions/DeleteItemsAction.ts","webpack://projectstorm/react-canvas-core/./src/actions/PanAndZoomCanvasAction.ts","webpack://projectstorm/react-canvas-core/./src/actions/ZoomCanvasAction.ts","webpack://projectstorm/react-canvas-core/./src/core-actions/Action.ts","webpack://projectstorm/react-canvas-core/./src/core-actions/ActionEventBus.ts","webpack://projectstorm/react-canvas-core/./src/core-models/BaseEntity.ts","webpack://projectstorm/react-canvas-core/./src/core-models/BaseModel.ts","webpack://projectstorm/react-canvas-core/./src/core-models/BasePositionModel.ts","webpack://projectstorm/react-canvas-core/./src/core-state/AbstractDisplacementState.ts","webpack://projectstorm/react-canvas-core/./src/core-state/State.ts","webpack://projectstorm/react-canvas-core/./src/core-state/StateMachine.ts","webpack://projectstorm/react-canvas-core/./src/core/AbstractFactory.ts","webpack://projectstorm/react-canvas-core/./src/core/AbstractModelFactory.ts","webpack://projectstorm/react-canvas-core/./src/core/AbstractReactFactory.tsx","webpack://projectstorm/react-canvas-core/./src/core/BaseObserver.ts","webpack://projectstorm/react-canvas-core/./src/core/FactoryBank.ts","webpack://projectstorm/react-canvas-core/./src/entities/canvas/CanvasModel.ts","webpack://projectstorm/react-canvas-core/./src/entities/canvas/CanvasWidget.tsx","webpack://projectstorm/react-canvas-core/./src/entities/layer/LayerModel.ts","webpack://projectstorm/react-canvas-core/./src/entities/layer/SmartLayerWidget.tsx","webpack://projectstorm/react-canvas-core/./src/entities/layer/TransformLayerWidget.tsx","webpack://projectstorm/react-canvas-core/./src/entities/selection/SelectionBoxLayerFactory.tsx","webpack://projectstorm/react-canvas-core/./src/entities/selection/SelectionBoxWidget.tsx","webpack://projectstorm/react-canvas-core/./src/entities/selection/SelectionLayerModel.ts","webpack://projectstorm/react-canvas-core/./src/index.ts","webpack://projectstorm/react-canvas-core/./src/states/DefaultState.ts","webpack://projectstorm/react-canvas-core/./src/states/DragCanvasState.ts","webpack://projectstorm/react-canvas-core/./src/states/MoveItemsState.ts","webpack://projectstorm/react-canvas-core/./src/states/SelectingState.ts","webpack://projectstorm/react-canvas-core/./src/states/SelectionBoxState.ts","webpack://projectstorm/react-canvas-core/./src/widgets/PeformanceWidget.tsx","webpack://projectstorm/react-canvas-core/external \"@emotion/react\"","webpack://projectstorm/react-canvas-core/external \"@emotion/styled\"","webpack://projectstorm/react-canvas-core/external \"@projectstorm/geometry\"","webpack://projectstorm/react-canvas-core/external \"lodash\"","webpack://projectstorm/react-canvas-core/external \"react\"","webpack://projectstorm/react-canvas-core/webpack/bootstrap","webpack://projectstorm/react-canvas-core/webpack/startup"],"names":["root","factory","exports","module","define","amd","self","CanvasEngine","BaseObserver","constructor","options","super","this","model","eventBus","ActionEventBus","stateMachine","StateMachine","layerFactories","FactoryBank","registerFactoryBank","registerDefaultDeleteItemsAction","registerDefaultZoomCanvasAction","repaintDebounceMs","registerAction","ZoomCanvasAction","registerDefaultPanAndZoomCanvasAction","PanAndZoomCanvasAction","DeleteItemsAction","getStateMachine","getRelativeMousePoint","event","point","getRelativePoint","clientX","clientY","Point","x","getOffsetX","getZoomLevel","y","getOffsetY","canvasRect","canvas","getBoundingClientRect","left","top","registerListener","factoryAdded","setDiagramEngine","factoryRemoved","getActionEventBus","getLayerFactories","getFactoryForLayer","layer","getFactory","getType","setModel","requestAnimationFrame","repaintCanvas","getModel","promise","repaint","iterateListeners","listener","repaintFn","debounce","Promise","resolve","l","rendered","deregister","setCanvas","fireEvent","getCanvas","getMouseElement","zoomToFit","xFactor","clientWidth","scrollWidth","yFactor","clientHeight","scrollHeight","zoomFactor","setZoomLevel","setOffset","Toolkit","TESTING","TESTING_UID","replace","c","r","Math","random","toString","element","selector","Element","prototype","closest","s","el","matches","call","parentElement","parentNode","nodeType","Action","keyCodes","modifiers","ctrlKey","shiftKey","altKey","metaKey","type","InputType","KEY_DOWN","fire","keyCode","indexOf","_","isEqual","forEach","engine","getSelectedEntities","isLocked","remove","MOUSE_WHEEL","actionEvent","getLayers","allowRepaint","stopPropagation","oldZoomFactor","scrollDelta","inverseZoom","deltaY","boundingRect","currentTarget","width","height","widthDiff","heightDiff","yDelta","xDelta","deltaX","id","UID","setEngine","actions","keys","getKeys","action","deregisterAction","getActionsForType","filter","getModelForEvent","getActionsForEvent","MOUSE_DOWN","MOUSE_UP","key","toLowerCase","KEY_UP","MOUSE_MOVE","TOUCH_START","TOUCH_END","TOUCH_MOVE","fireAction","BaseEntity","getOptions","getID","doClone","lookupTable","clone","cloneDeep","clearListeners","listeners","deserialize","data","locked","serialize","k","entity","setLocked","BaseModel","performanceTune","getParentCanvasModel","parent","CanvasModel","getParent","setParent","getSelectionEntities","selected","extras","isSelected","setSelected","BasePositionModel","position","setPosition","getBoundingBox","Rectangle","getPosition","getX","getY","AbstractDisplacementState","State","handleMoveStart","buttons","eject","handleMove","handleMoveEnd","touches","initialX","initialY","rel","initialXRelative","initialYRelative","fireMouseMoved","displacementX","displacementY","virtualDisplacementX","virtualDisplacementY","childStates","popState","transitionWithEvent","state","pushState","push","tryActivateParentState","length","isKeysFullfilled","tryActivateChildState","findStateToActivate","child","intersection","activated","previous","handler1","handler2","deactivated","next","stateStack","getCurrentState","currentState","setState","pop","last","old","newState","setFactoryBank","bank","AbstractModelFactory","AbstractFactory","AbstractReactFactory","fireEventInternal","firing","function","cb","getListenerHandle","deregisterListener","handle","factories","getFactories","values","clearFactories","deregisterFactory","Error","registerFactory","zoom","gridSize","offsetX","offsetY","layers","flatMap","ob","clearSelection","getModels","addLayer","entityRemoved","removeLayer","index","splice","setGridSize","size","getGridPosition","pos","floor","deserializeModel","models","promises","resolvers","registerModel","layerOb","generateModel","initialConfig","map","setOffsetX","setOffsetY","S","Canvas","div","CanvasWidget","React","Component","props","ref","createRef","diagramEngineListener","componentWillUnmount","canvasListener","document","removeEventListener","keyUp","keyDown","registerCanvas","current","list","componentDidUpdate","componentDidMount","forceUpdate","addEventListener","render","className","onWheel","onMouseDown","onMouseUp","onMouseMove","onTouchStart","onTouchEnd","onTouchMove","TransformLayerWidget","SmartLayerWidget","LayerModel","repaintEnabled","isSvg","transformed","modelOb","getChildModelFactoryBank","addModel","mapValues","isRepaintEnabled","allow","removeModel","_id","shouldComponentUpdate","generateReactWidget","shared","css","DivLayer","SvgLayer","svg","getTransform","getTransformStyle","transform","style","children","SelectionBoxLayerFactory","SelectionLayerModel","SelectionBoxWidget","rect","box","Container","setBox","DefaultState","name","SelectingState","MoveItemsState","DragCanvasState","config","allowDrag","prev","initialCanvasX","initialCanvasY","initialPositions","items","item","SelectionBoxState","getBoxDimensions","touch","abs","right","bottom","relative","bounds","containsPoint","getTopLeft","getBottomRight","PeformanceWidget","nextProps","nextState","nextContext","serialized","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__"],"mappings":"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","file":"index.umd.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"projectstorm/react-canvas-core\"] = factory();\n\telse\n\t\troot[\"projectstorm/react-canvas-core\"] = factory();\n})(self, function() {\nreturn ","import { debounce } from 'lodash';\nimport { CanvasModel } from './entities/canvas/CanvasModel';\nimport { FactoryBank } from './core/FactoryBank';\nimport { AbstractReactFactory } from './core/AbstractReactFactory';\nimport { LayerModel } from './entities/layer/LayerModel';\nimport { BaseListener, BaseObserver } from './core/BaseObserver';\nimport { MouseEvent } from 'react';\nimport { BaseModel } from './core-models/BaseModel';\nimport { Point } from '@projectstorm/geometry';\nimport { ActionEventBus } from './core-actions/ActionEventBus';\nimport { PanAndZoomCanvasAction } from './actions/PanAndZoomCanvasAction';\nimport { ZoomCanvasAction } from './actions/ZoomCanvasAction';\nimport { DeleteItemsAction } from './actions/DeleteItemsAction';\nimport { StateMachine } from './core-state/StateMachine';\n\nexport interface CanvasEngineListener extends BaseListener {\n\tcanvasReady?(): void;\n\n\trepaintCanvas?(): void;\n\n\trendered?(): void;\n}\n\n/**\n * Defines the CanvasEngine options\n */\nexport interface CanvasEngineOptions {\n\tregisterDefaultDeleteItemsAction?: boolean;\n\tregisterDefaultPanAndZoomCanvasAction?: boolean;\n\tregisterDefaultZoomCanvasAction?: boolean;\n\t/**\n\t * Defines the debounce wait time in milliseconds if > 0\n\t */\n\trepaintDebounceMs?: number;\n}\n\nexport class CanvasEngine<\n\tL extends CanvasEngineListener = CanvasEngineListener,\n\tM extends CanvasModel = CanvasModel\n> extends BaseObserver<L> {\n\tprotected model: M;\n\tprotected layerFactories: FactoryBank<AbstractReactFactory<LayerModel>>;\n\tprotected canvas: HTMLDivElement;\n\tprotected eventBus: ActionEventBus;\n\tprotected stateMachine: StateMachine;\n\tprotected options: CanvasEngineOptions;\n\n\tconstructor(options: CanvasEngineOptions = {}) {\n\t\tsuper();\n\t\tthis.model = null;\n\t\tthis.eventBus = new ActionEventBus(this);\n\t\tthis.stateMachine = new StateMachine(this);\n\t\tthis.layerFactories = new FactoryBank();\n\t\tthis.registerFactoryBank(this.layerFactories);\n\n\t\t/**\n\t\t * Overrides the standard options with the possible given options\n\t\t */\n\t\tthis.options = {\n\t\t\tregisterDefaultDeleteItemsAction: true,\n\t\t\tregisterDefaultZoomCanvasAction: true,\n\t\t\trepaintDebounceMs: 0,\n\t\t\t...options\n\t\t};\n\t\tif (this.options.registerDefaultZoomCanvasAction === true) {\n\t\t\tthis.eventBus.registerAction(new ZoomCanvasAction());\n\t\t} else if (this.options.registerDefaultPanAndZoomCanvasAction === true) {\n\t\t\tthis.eventBus.registerAction(new PanAndZoomCanvasAction());\n\t\t}\n\t\tif (this.options.registerDefaultDeleteItemsAction === true) {\n\t\t\tthis.eventBus.registerAction(new DeleteItemsAction());\n\t\t}\n\t}\n\n\tgetStateMachine() {\n\t\treturn this.stateMachine;\n\t}\n\n\tgetRelativeMousePoint(event: { clientX: number; clientY: number }): Point {\n\t\tconst point = this.getRelativePoint(event.clientX, event.clientY);\n\t\treturn new Point(\n\t\t\t(point.x - this.model.getOffsetX()) / (this.model.getZoomLevel() / 100.0),\n\t\t\t(point.y - this.model.getOffsetY()) / (this.model.getZoomLevel() / 100.0)\n\t\t);\n\t}\n\n\tgetRelativePoint(x, y): Point {\n\t\tconst canvasRect = this.canvas.getBoundingClientRect();\n\t\treturn new Point(x - canvasRect.left, y - canvasRect.top);\n\t}\n\n\tregisterFactoryBank(factory: FactoryBank) {\n\t\tfactory.registerListener({\n\t\t\tfactoryAdded: (event) => {\n\t\t\t\tevent.factory.setDiagramEngine(this);\n\t\t\t},\n\t\t\tfactoryRemoved: (event) => {\n\t\t\t\tevent.factory.setDiagramEngine(null);\n\t\t\t}\n\t\t});\n\t}\n\n\tgetActionEventBus() {\n\t\treturn this.eventBus;\n\t}\n\n\tgetLayerFactories() {\n\t\treturn this.layerFactories;\n\t}\n\n\tgetFactoryForLayer<F extends AbstractReactFactory<LayerModel>>(layer: LayerModel | string) {\n\t\tif (typeof layer === 'string') {\n\t\t\treturn this.layerFactories.getFactory(layer);\n\t\t}\n\t\treturn this.layerFactories.getFactory(layer.getType());\n\t}\n\n\tsetModel(model: M) {\n\t\tthis.model = model;\n\t\tif (this.canvas) {\n\t\t\trequestAnimationFrame(() => {\n\t\t\t\tthis.repaintCanvas();\n\t\t\t});\n\t\t}\n\t}\n\n\tgetModel(): M {\n\t\treturn this.model;\n\t}\n\n\trepaintCanvas(promise: true): Promise<any>;\n\trepaintCanvas(): void;\n\trepaintCanvas(promise?): Promise<any> | void {\n\t\tconst { repaintDebounceMs } = this.options;\n\n\t\t/**\n\t\t * The actual repaint function\n\t\t */\n\t\tconst repaint = () => {\n\t\t\tthis.iterateListeners((listener) => {\n\t\t\t\tif (listener.repaintCanvas) {\n\t\t\t\t\tlistener.repaintCanvas();\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t// if the `repaintDebounceMs` option is > 0, then apply the debounce\n\t\tlet repaintFn = repaint;\n\n\t\tif (repaintDebounceMs > 0) {\n\t\t\trepaintFn = debounce(repaint, repaintDebounceMs);\n\t\t}\n\n\t\tif (promise) {\n\t\t\treturn new Promise<void>((resolve) => {\n\t\t\t\tconst l = this.registerListener({\n\t\t\t\t\trendered: () => {\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t\tl.deregister();\n\t\t\t\t\t}\n\t\t\t\t} as L);\n\t\t\t\trepaintFn();\n\t\t\t});\n\t\t}\n\n\t\trepaintFn();\n\t}\n\n\tsetCanvas(canvas?: HTMLDivElement) {\n\t\tif (this.canvas !== canvas) {\n\t\t\tthis.canvas = canvas;\n\t\t\tif (canvas) {\n\t\t\t\tthis.fireEvent({}, 'canvasReady');\n\t\t\t}\n\t\t}\n\t}\n\n\tgetCanvas() {\n\t\treturn this.canvas;\n\t}\n\n\tgetMouseElement(event: MouseEvent): BaseModel {\n\t\treturn null;\n\t}\n\n\tzoomToFit() {\n\t\tconst xFactor = this.canvas.clientWidth / this.canvas.scrollWidth;\n\t\tconst yFactor = this.canvas.clientHeight / this.canvas.scrollHeight;\n\t\tconst zoomFactor = xFactor < yFactor ? xFactor : yFactor;\n\n\t\tthis.model.setZoomLevel(this.model.getZoomLevel() * zoomFactor);\n\t\tthis.model.setOffset(0, 0);\n\t\tthis.repaintCanvas();\n\t}\n}\n","export class Toolkit {\n\tstatic TESTING: boolean = false;\n\tstatic TESTING_UID = 0;\n\n\t/**\n\t * Generats a unique ID (thanks Stack overflow :3)\n\t * @returns {String}\n\t */\n\tpublic static UID(): string {\n\t\tif (Toolkit.TESTING) {\n\t\t\tToolkit.TESTING_UID++;\n\t\t\treturn `${Toolkit.TESTING_UID}`;\n\t\t}\n\t\treturn 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n\t\t\tconst r = (Math.random() * 16) | 0;\n\t\t\tconst v = c === 'x' ? r : (r & 0x3) | 0x8;\n\t\t\treturn v.toString(16);\n\t\t});\n\t}\n\n\tpublic static closest(element: Element, selector: string) {\n\t\tif (!Element.prototype.closest) {\n\t\t\tElement.prototype.closest = function (s) {\n\t\t\t\tvar el = this;\n\n\t\t\t\tdo {\n\t\t\t\t\tif (Element.prototype.matches.call(el, s)) return el;\n\t\t\t\t\tel = el.parentElement || el.parentNode;\n\t\t\t\t} while (el !== null && el.nodeType === 1);\n\t\t\t\treturn null;\n\t\t\t};\n\t\t}\n\t\treturn element.closest(selector);\n\t}\n}\n","import { Action, ActionEvent, InputType } from '../core-actions/Action';\nimport { KeyboardEvent } from 'react';\nimport * as _ from 'lodash';\n\nexport interface DeleteItemsActionOptions {\n\tkeyCodes?: number[];\n\tmodifiers?: {\n\t\tctrlKey?: boolean;\n\t\tshiftKey?: boolean;\n\t\taltKey?: boolean;\n\t\tmetaKey?: boolean;\n\t};\n}\n\n/**\n * Deletes all selected items\n */\nexport class DeleteItemsAction extends Action {\n\tconstructor(options: DeleteItemsActionOptions = {}) {\n\t\tconst keyCodes = options.keyCodes || [46, 8];\n\t\tconst modifiers = {\n\t\t\tctrlKey: false,\n\t\t\tshiftKey: false,\n\t\t\taltKey: false,\n\t\t\tmetaKey: false,\n\t\t\t...options.modifiers\n\t\t};\n\n\t\tsuper({\n\t\t\ttype: InputType.KEY_DOWN,\n\t\t\tfire: (event: ActionEvent<KeyboardEvent>) => {\n\t\t\t\tconst { keyCode, ctrlKey, shiftKey, altKey, metaKey } = event.event;\n\n\t\t\t\tif (keyCodes.indexOf(keyCode) !== -1 && _.isEqual({ ctrlKey, shiftKey, altKey, metaKey }, modifiers)) {\n\t\t\t\t\t_.forEach(this.engine.getModel().getSelectedEntities(), (model) => {\n\t\t\t\t\t\t// only delete items which are not locked\n\t\t\t\t\t\tif (!model.isLocked()) {\n\t\t\t\t\t\t\tmodel.remove();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tthis.engine.repaintCanvas();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}\n","import { WheelEvent } from 'react';\nimport { Action, ActionEvent, InputType } from '../core-actions/Action';\n\nexport interface PanAndZoomCanvasActionOptions {\n\tinverseZoom?: boolean;\n}\n\nexport class PanAndZoomCanvasAction extends Action {\n\tconstructor(options: PanAndZoomCanvasActionOptions = {}) {\n\t\tsuper({\n\t\t\ttype: InputType.MOUSE_WHEEL,\n\t\t\tfire: (actionEvent: ActionEvent<WheelEvent>) => {\n\t\t\t\tconst { event } = actionEvent;\n\t\t\t\t// we can block layer rendering because we are only targeting the transforms\n\t\t\t\tfor (let layer of this.engine.getModel().getLayers()) {\n\t\t\t\t\tlayer.allowRepaint(false);\n\t\t\t\t}\n\n\t\t\t\tconst model = this.engine.getModel();\n\t\t\t\tevent.stopPropagation();\n\t\t\t\tif (event.ctrlKey) {\n\t\t\t\t\t// Pinch and zoom gesture\n\t\t\t\t\tconst oldZoomFactor = this.engine.getModel().getZoomLevel() / 100;\n\n\t\t\t\t\tlet scrollDelta = options.inverseZoom ? event.deltaY : -event.deltaY;\n\t\t\t\t\tscrollDelta /= 3;\n\n\t\t\t\t\tif (model.getZoomLevel() + scrollDelta > 10) {\n\t\t\t\t\t\tmodel.setZoomLevel(model.getZoomLevel() + scrollDelta);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst zoomFactor = model.getZoomLevel() / 100;\n\n\t\t\t\t\tconst boundingRect = event.currentTarget.getBoundingClientRect();\n\t\t\t\t\tconst clientWidth = boundingRect.width;\n\t\t\t\t\tconst clientHeight = boundingRect.height;\n\t\t\t\t\t// compute difference between rect before and after scroll\n\t\t\t\t\tconst widthDiff = clientWidth * zoomFactor - clientWidth * oldZoomFactor;\n\t\t\t\t\tconst heightDiff = clientHeight * zoomFactor - clientHeight * oldZoomFactor;\n\t\t\t\t\t// compute mouse coords relative to canvas\n\t\t\t\t\tconst clientX = event.clientX - boundingRect.left;\n\t\t\t\t\tconst clientY = event.clientY - boundingRect.top;\n\n\t\t\t\t\t// compute width and height increment factor\n\t\t\t\t\tconst xFactor = (clientX - model.getOffsetX()) / oldZoomFactor / clientWidth;\n\t\t\t\t\tconst yFactor = (clientY - model.getOffsetY()) / oldZoomFactor / clientHeight;\n\n\t\t\t\t\tmodel.setOffset(model.getOffsetX() - widthDiff * xFactor, model.getOffsetY() - heightDiff * yFactor);\n\t\t\t\t} else {\n\t\t\t\t\t// Pan gesture\n\t\t\t\t\tlet yDelta = options.inverseZoom ? -event.deltaY : event.deltaY;\n\t\t\t\t\tlet xDelta = options.inverseZoom ? -event.deltaX : event.deltaX;\n\t\t\t\t\tmodel.setOffset(model.getOffsetX() - xDelta, model.getOffsetY() - yDelta);\n\t\t\t\t}\n\t\t\t\tthis.engine.repaintCanvas();\n\n\t\t\t\t// re-enable rendering\n\t\t\t\tfor (let layer of this.engine.getModel().getLayers()) {\n\t\t\t\t\tlayer.allowRepaint(true);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}\n","import { WheelEvent } from 'react';\nimport { Action, ActionEvent, InputType } from '../core-actions/Action';\n\nexport interface ZoomCanvasActionOptions {\n\tinverseZoom?: boolean;\n}\n\nexport class ZoomCanvasAction extends Action {\n\tconstructor(options: ZoomCanvasActionOptions = {}) {\n\t\tsuper({\n\t\t\ttype: InputType.MOUSE_WHEEL,\n\t\t\tfire: (actionEvent: ActionEvent<WheelEvent>) => {\n\t\t\t\tconst { event } = actionEvent;\n\t\t\t\t// we can block layer rendering because we are only targeting the transforms\n\t\t\t\tfor (let layer of this.engine.getModel().getLayers()) {\n\t\t\t\t\tlayer.allowRepaint(false);\n\t\t\t\t}\n\n\t\t\t\tconst model = this.engine.getModel();\n\t\t\t\tevent.stopPropagation();\n\t\t\t\tconst oldZoomFactor = this.engine.getModel().getZoomLevel() / 100;\n\t\t\t\tlet scrollDelta = options.inverseZoom ? -event.deltaY : event.deltaY;\n\t\t\t\t//check if it is pinch gesture\n\t\t\t\tif (event.ctrlKey && scrollDelta % 1 !== 0) {\n\t\t\t\t\t/*\n\t\t\t\t\t\tChrome and Firefox sends wheel event with deltaY that\n\t\t\t\t\t\thave fractional part, also `ctrlKey` prop of the event is true\n\t\t\t\t\t\tthough ctrl isn't pressed\n\t\t\t\t\t*/\n\t\t\t\t\tscrollDelta /= 3;\n\t\t\t\t} else {\n\t\t\t\t\tscrollDelta /= 60;\n\t\t\t\t}\n\t\t\t\tif (model.getZoomLevel() + scrollDelta > 10) {\n\t\t\t\t\tmodel.setZoomLevel(model.getZoomLevel() + scrollDelta);\n\t\t\t\t}\n\n\t\t\t\tconst zoomFactor = model.getZoomLevel() / 100;\n\n\t\t\t\tconst boundingRect = event.currentTarget.getBoundingClientRect();\n\t\t\t\tconst clientWidth = boundingRect.width;\n\t\t\t\tconst clientHeight = boundingRect.height;\n\t\t\t\t// compute difference between rect before and after scroll\n\t\t\t\tconst widthDiff = clientWidth * zoomFactor - clientWidth * oldZoomFactor;\n\t\t\t\tconst heightDiff = clientHeight * zoomFactor - clientHeight * oldZoomFactor;\n\t\t\t\t// compute mouse coords relative to canvas\n\t\t\t\tconst clientX = event.clientX - boundingRect.left;\n\t\t\t\tconst clientY = event.clientY - boundingRect.top;\n\n\t\t\t\t// compute width and height increment factor\n\t\t\t\tconst xFactor = (clientX - model.getOffsetX()) / oldZoomFactor / clientWidth;\n\t\t\t\tconst yFactor = (clientY - model.getOffsetY()) / oldZoomFactor / clientHeight;\n\n\t\t\t\tmodel.setOffset(model.getOffsetX() - widthDiff * xFactor, model.getOffsetY() - heightDiff * yFactor);\n\t\t\t\tthis.engine.repaintCanvas();\n\n\t\t\t\t// re-enable rendering\n\t\t\t\tfor (let layer of this.engine.getModel().getLayers()) {\n\t\t\t\t\tlayer.allowRepaint(true);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}\n","import { MouseEvent, KeyboardEvent, WheelEvent, TouchEvent, SyntheticEvent } from 'react';\nimport { Toolkit } from '../Toolkit';\nimport { CanvasEngine } from '../CanvasEngine';\nimport { BaseModel } from '../core-models/BaseModel';\n\nexport enum InputType {\n\tMOUSE_DOWN = 'mouse-down',\n\tMOUSE_UP = 'mouse-up',\n\tMOUSE_MOVE = 'mouse-move',\n\tMOUSE_WHEEL = 'mouse-wheel',\n\tKEY_DOWN = 'key-down',\n\tKEY_UP = 'key-up',\n\tTOUCH_START = 'touch-start',\n\tTOUCH_END = 'touch-end',\n\tTOUCH_MOVE = 'touch-move'\n}\n\nexport interface Mapping {\n\t[InputType.MOUSE_DOWN]: MouseEvent;\n\t[InputType.MOUSE_UP]: MouseEvent;\n\t[InputType.MOUSE_MOVE]: MouseEvent;\n\t[InputType.MOUSE_WHEEL]: WheelEvent;\n\t[InputType.KEY_DOWN]: KeyboardEvent;\n\t[InputType.KEY_UP]: KeyboardEvent;\n\t[InputType.TOUCH_START]: TouchEvent;\n\t[InputType.TOUCH_END]: TouchEvent;\n\t[InputType.TOUCH_MOVE]: TouchEvent;\n}\n\nexport interface ActionEvent<Event extends SyntheticEvent = SyntheticEvent, Model extends BaseModel = BaseModel> {\n\tevent: Event;\n\tmodel?: Model;\n}\n\nexport interface ActionOptions {\n\ttype: InputType;\n\tfire: (event: ActionEvent<Mapping[this['type']]>) => void;\n}\n\nexport class Action<T extends CanvasEngine = CanvasEngine> {\n\toptions: ActionOptions;\n\tid: string;\n\tengine: T;\n\n\tconstructor(options: ActionOptions) {\n\t\tthis.options = options;\n\t\tthis.id = Toolkit.UID();\n\t}\n\n\tsetEngine(engine: T) {\n\t\tthis.engine = engine;\n\t}\n}\n","import { Action, ActionEvent, InputType } from './Action';\nimport { KeyboardEvent, MouseEvent } from 'react';\nimport * as _ from 'lodash';\nimport { CanvasEngine } from '../CanvasEngine';\nimport { BaseModel } from '../core-models/BaseModel';\n\nexport class ActionEventBus {\n\tprotected actions: { [id: string]: Action };\n\tprotected engine: CanvasEngine;\n\tprotected keys: { [key: string]: boolean };\n\n\tconstructor(engine: CanvasEngine) {\n\t\tthis.actions = {};\n\t\tthis.engine = engine;\n\t\tthis.keys = {};\n\t}\n\n\tgetKeys(): string[] {\n\t\treturn _.keys(this.keys);\n\t}\n\n\tregisterAction(action: Action): () => void {\n\t\taction.setEngine(this.engine);\n\t\tthis.actions[action.id] = action;\n\t\treturn () => {\n\t\t\tthis.deregisterAction(action);\n\t\t};\n\t}\n\n\tderegisterAction(action: Action) {\n\t\taction.setEngine(null);\n\t\tdelete this.actions[action.id];\n\t}\n\n\tgetActionsForType(type: InputType): Action[] {\n\t\treturn _.filter(this.actions, (action) => {\n\t\t\treturn action.options.type === type;\n\t\t});\n\t}\n\n\tgetModelForEvent(actionEvent: ActionEvent<MouseEvent>): BaseModel {\n\t\tif (actionEvent.model) {\n\t\t\treturn actionEvent.model;\n\t\t}\n\t\treturn this.engine.getMouseElement(actionEvent.event);\n\t}\n\n\tgetActionsForEvent(actionEvent: ActionEvent): Action[] {\n\t\tconst { event } = actionEvent;\n\t\tif (event.type === 'mousedown') {\n\t\t\treturn this.getActionsForType(InputType.MOUSE_DOWN);\n\t\t} else if (event.type === 'mouseup') {\n\t\t\treturn this.getActionsForType(InputType.MOUSE_UP);\n\t\t} else if (event.type === 'keydown') {\n\t\t\t// store the recorded key\n\t\t\tthis.keys[(event as KeyboardEvent).key.toLowerCase()] = true;\n\t\t\treturn this.getActionsForType(InputType.KEY_DOWN);\n\t\t} else if (event.type === 'keyup') {\n\t\t\t// delete the recorded key\n\t\t\tdelete this.keys[(event as KeyboardEvent).key.toLowerCase()];\n\t\t\treturn this.getActionsForType(InputType.KEY_UP);\n\t\t} else if (event.type === 'mousemove') {\n\t\t\treturn this.getActionsForType(InputType.MOUSE_MOVE);\n\t\t} else if (event.type === 'wheel') {\n\t\t\treturn this.getActionsForType(InputType.MOUSE_WHEEL);\n\t\t} else if (event.type === 'touchstart') {\n\t\t\treturn this.getActionsForType(InputType.TOUCH_START);\n\t\t} else if (event.type === 'touchend') {\n\t\t\treturn this.getActionsForType(InputType.TOUCH_END);\n\t\t} else if (event.type === 'touchmove') {\n\t\t\treturn this.getActionsForType(InputType.TOUCH_MOVE);\n\t\t}\n\n\t\treturn [];\n\t}\n\n\tfireAction(actionEvent: ActionEvent) {\n\t\tconst actions = this.getActionsForEvent(actionEvent);\n\t\tfor (let action of actions) {\n\t\t\taction.options.fire(actionEvent as any);\n\t\t}\n\t}\n}\n","import { Toolkit } from '../Toolkit';\nimport * as _ from 'lodash';\nimport { CanvasEngine } from '../CanvasEngine';\nimport { BaseEvent, BaseListener, BaseObserver } from '../core/BaseObserver';\nimport { AbstractModelFactory } from '../core/AbstractModelFactory';\nimport { BaseModel } from './BaseModel';\n\nexport interface BaseEntityEvent<T extends BaseEntity = BaseEntity> extends BaseEvent {\n\tentity: T;\n}\n\nexport interface BaseEntityListener<T extends BaseEntity = BaseEntity> extends BaseListener {\n\tlockChanged?(event: BaseEntityEvent<T> & { locked: boolean }): void;\n}\n\nexport type BaseEntityType = 'node' | 'link' | 'port' | 'point';\n\nexport interface BaseEntityOptions {\n\tid?: string;\n\tlocked?: boolean;\n}\n\nexport type BaseEntityGenerics = {\n\tLISTENER: BaseEntityListener;\n\tOPTIONS: BaseEntityOptions;\n};\n\nexport interface DeserializeEvent<T extends BaseEntity = BaseEntity> {\n\tengine: CanvasEngine;\n\tdata: ReturnType<T['serialize']>;\n\tregisterModel(model: BaseModel);\n\tgetModel<T extends BaseModel>(id: string): Promise<T>;\n}\n\nexport class BaseEntity<T extends BaseEntityGenerics = BaseEntityGenerics> extends BaseObserver<T['LISTENER']> {\n\tprotected options: T['OPTIONS'];\n\n\tconstructor(options: T['OPTIONS'] = {}) {\n\t\tsuper();\n\t\tthis.options = {\n\t\t\tid: Toolkit.UID(),\n\t\t\t...options\n\t\t};\n\t}\n\n\tgetOptions() {\n\t\treturn this.options;\n\t}\n\n\tgetID() {\n\t\treturn this.options.id;\n\t}\n\n\tdoClone(lookupTable: { [s: string]: any } = {}, clone: any) {\n\t\t/*noop*/\n\t}\n\n\tclone(lookupTable: { [s: string]: any } = {}) {\n\t\t// try and use an existing clone first\n\t\tif (lookupTable[this.options.id]) {\n\t\t\treturn lookupTable[this.options.id];\n\t\t}\n\t\tlet clone = _.cloneDeep(this);\n\t\tclone.options = {\n\t\t\t...this.options,\n\t\t\tid: Toolkit.UID()\n\t\t};\n\t\tclone.clearListeners();\n\t\tlookupTable[this.options.id] = clone;\n\n\t\tthis.doClone(lookupTable, clone);\n\t\treturn clone;\n\t}\n\n\tclearListeners() {\n\t\tthis.listeners = {};\n\t}\n\n\tdeserialize(event: DeserializeEvent<this>) {\n\t\tthis.options.id = event.data.id;\n\t\tthis.options.locked = event.data.locked;\n\t}\n\n\tserialize() {\n\t\treturn {\n\t\t\tid: this.options.id,\n\t\t\tlocked: this.options.locked\n\t\t};\n\t}\n\n\tfireEvent<L extends Partial<BaseEntityEvent> & object>(event: L, k: keyof T['LISTENER']) {\n\t\tsuper.fireEvent(\n\t\t\t{\n\t\t\t\tentity: this,\n\t\t\t\t...event\n\t\t\t},\n\t\t\tk\n\t\t);\n\t}\n\n\tpublic isLocked(): boolean {\n\t\treturn this.options.locked;\n\t}\n\n\tpublic setLocked(locked: boolean = true) {\n\t\tthis.options.locked = locked;\n\t\tthis.fireEvent(\n\t\t\t{\n\t\t\t\tlocked: locked\n\t\t\t},\n\t\t\t'lockChanged'\n\t\t);\n\t}\n}\n","import {\n\tBaseEntity,\n\tBaseEntityEvent,\n\tBaseEntityGenerics,\n\tBaseEntityListener,\n\tBaseEntityOptions,\n\tDeserializeEvent\n} from './BaseEntity';\nimport { CanvasModel } from '../entities/canvas/CanvasModel';\n\nexport interface BaseModelListener extends BaseEntityListener {\n\tselectionChanged?(event: BaseEntityEvent<BaseModel> & { isSelected: boolean }): void;\n\n\tentityRemoved?(event: BaseEntityEvent<BaseModel>): void;\n}\n\nexport interface BaseModelOptions extends BaseEntityOptions {\n\ttype?: string;\n\tselected?: boolean;\n\textras?: any;\n}\n\nexport interface BaseModelGenerics extends BaseEntityGenerics {\n\tLISTENER: BaseModelListener;\n\tPARENT: BaseEntity;\n\tOPTIONS: BaseModelOptions;\n}\n\nexport class BaseModel<G extends BaseModelGenerics = BaseModelGenerics> extends BaseEntity<G> {\n\tprotected parent: G['PARENT'];\n\n\tconstructor(options: G['OPTIONS']) {\n\t\tsuper(options);\n\t}\n\n\tperformanceTune() {\n\t\treturn true;\n\t}\n\n\tgetParentCanvasModel(): CanvasModel {\n\t\tif (!this.parent) {\n\t\t\treturn null;\n\t\t}\n\t\tif (this.parent instanceof CanvasModel) {\n\t\t\treturn this.parent;\n\t\t} else if (this.parent instanceof BaseModel) {\n\t\t\treturn this.parent.getParentCanvasModel();\n\t\t}\n\t\treturn null;\n\t}\n\n\tgetParent(): G['PARENT'] {\n\t\treturn this.parent;\n\t}\n\n\tsetParent(parent: G['PARENT']) {\n\t\tthis.parent = parent;\n\t}\n\n\tgetSelectionEntities(): Array<BaseModel> {\n\t\treturn [this];\n\t}\n\n\tserialize() {\n\t\treturn {\n\t\t\t...super.serialize(),\n\t\t\ttype: this.options.type,\n\t\t\tselected: this.options.selected,\n\t\t\textras: this.options.extras\n\t\t};\n\t}\n\n\tdeserialize(event: DeserializeEvent<this>) {\n\t\tsuper.deserialize(event);\n\t\tthis.options.extras = event.data.extras;\n\t\tthis.options.selected = event.data.selected;\n\t}\n\n\tgetType(): string {\n\t\treturn this.options.type;\n\t}\n\n\tisSelected(): boolean {\n\t\treturn this.options.selected;\n\t}\n\n\tisLocked(): boolean {\n\t\tconst locked = super.isLocked();\n\t\tif (locked) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// delegate this call up to the parent\n\t\tif (this.parent) {\n\t\t\treturn this.parent.isLocked();\n\t\t}\n\t\treturn false;\n\t}\n\n\tsetSelected(selected: boolean = true) {\n\t\tif (this.options.selected !== selected) {\n\t\t\tthis.options.selected = selected;\n\n\t\t\tthis.fireEvent(\n\t\t\t\t{\n\t\t\t\t\tisSelected: selected\n\t\t\t\t},\n\t\t\t\t'selectionChanged'\n\t\t\t);\n\t\t}\n\t}\n\n\tremove() {\n\t\tthis.fireEvent({}, 'entityRemoved');\n\t}\n}\n","import { BaseModel, BaseModelGenerics, BaseModelListener, BaseModelOptions } from './BaseModel';\nimport { BaseEntityEvent, DeserializeEvent } from './BaseEntity';\nimport { Point, Rectangle } from '@projectstorm/geometry';\nimport { ModelGeometryInterface } from '../core/ModelGeometryInterface';\n\nexport interface BasePositionModelListener extends BaseModelListener {\n\tpositionChanged?(event: BaseEntityEvent<BasePositionModel>): void;\n}\n\nexport interface BasePositionModelOptions extends BaseModelOptions {\n\tposition?: Point;\n}\n\nexport interface BasePositionModelGenerics extends BaseModelGenerics {\n\tLISTENER: BasePositionModelListener;\n\tOPTIONS: BasePositionModelOptions;\n}\n\nexport class BasePositionModel<G extends BasePositionModelGenerics = BasePositionModelGenerics>\n\textends BaseModel<G>\n\timplements ModelGeometryInterface\n{\n\tprotected position: Point;\n\n\tconstructor(options: G['OPTIONS']) {\n\t\tsuper(options);\n\t\tthis.position = options.position || new Point(0, 0);\n\t}\n\n\tsetPosition(point: Point): void;\n\tsetPosition(x: number, y: number): void;\n\tsetPosition(x: number | Point, y?: number): void {\n\t\tif (x instanceof Point) {\n\t\t\tthis.position = x;\n\t\t} else {\n\t\t\tthis.position = new Point(x, y);\n\t\t}\n\t\tthis.fireEvent({}, 'positionChanged');\n\t}\n\n\tgetBoundingBox(): Rectangle {\n\t\treturn new Rectangle(this.position, 0, 0);\n\t}\n\n\tdeserialize(event: DeserializeEvent<this>) {\n\t\tsuper.deserialize(event);\n\t\tthis.position = new Point(event.data.x, event.data.y);\n\t}\n\n\tserialize() {\n\t\treturn {\n\t\t\t...super.serialize(),\n\t\t\tx: this.position.x,\n\t\t\ty: this.position.y\n\t\t};\n\t}\n\n\tgetPosition(): Point {\n\t\treturn this.position;\n\t}\n\n\tgetX() {\n\t\treturn this.position.x;\n\t}\n\n\tgetY() {\n\t\treturn this.position.y;\n\t}\n}\n","import { State, StateOptions } from './State';\nimport { Action, ActionEvent, InputType } from '../core-actions/Action';\nimport { CanvasEngine } from '../CanvasEngine';\n\nexport interface AbstractDisplacementStateEvent {\n\tdisplacementX: number;\n\tdisplacementY: number;\n\tvirtualDisplacementX: number;\n\tvirtualDisplacementY: number;\n\tevent: React.MouseEvent | React.TouchEvent;\n}\n\nexport abstract class AbstractDisplacementState<E extends CanvasEngine = CanvasEngine> extends State<E> {\n\tinitialX: number;\n\tinitialY: number;\n\tinitialXRelative: number;\n\tinitialYRelative: number;\n\n\tconstructor(options: StateOptions) {\n\t\tsuper(options);\n\t\tthis.registerAction(\n\t\t\tnew Action({\n\t\t\t\ttype: InputType.MOUSE_DOWN,\n\t\t\t\tfire: (actionEvent: ActionEvent<React.MouseEvent>) => {\n\t\t\t\t\tconst { clientX, clientY } = actionEvent.event;\n\t\t\t\t\tthis.handleMoveStart(clientX, clientY);\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t\tthis.registerAction(\n\t\t\tnew Action({\n\t\t\t\ttype: InputType.MOUSE_MOVE,\n\t\t\t\tfire: (actionEvent: ActionEvent<React.MouseEvent>) => {\n\t\t\t\t\tconst { event } = actionEvent;\n\n\t\t\t\t\tif (event.buttons === 0) {\n\t\t\t\t\t\t// If buttons is 0, it means the mouse is not down, the user may have released it\n\t\t\t\t\t\t// outside of the canvas, then we eject the state\n\t\t\t\t\t\tthis.eject();\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst { clientX, clientY } = event;\n\t\t\t\t\tthis.handleMove(clientX, clientY, event);\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t\tthis.registerAction(\n\t\t\tnew Action({\n\t\t\t\ttype: InputType.MOUSE_UP,\n\t\t\t\tfire: () => this.handleMoveEnd()\n\t\t\t})\n\t\t);\n\n\t\tthis.registerAction(\n\t\t\tnew Action({\n\t\t\t\ttype: InputType.TOUCH_START,\n\t\t\t\tfire: (actionEvent: ActionEvent<React.TouchEvent>) => {\n\t\t\t\t\tconst { clientX, clientY } = actionEvent.event.touches[0];\n\t\t\t\t\tthis.handleMoveStart(clientX, clientY);\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t\tthis.registerAction(\n\t\t\tnew Action({\n\t\t\t\ttype: InputType.TOUCH_MOVE,\n\t\t\t\tfire: (actionEvent: ActionEvent<React.TouchEvent>) => {\n\t\t\t\t\tconst { event } = actionEvent;\n\t\t\t\t\tconst { clientX, clientY } = event.touches[0];\n\t\t\t\t\tthis.handleMove(clientX, clientY, event);\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t\tthis.registerAction(\n\t\t\tnew Action({\n\t\t\t\ttype: InputType.TOUCH_END,\n\t\t\t\tfire: () => this.handleMoveEnd()\n\t\t\t})\n\t\t);\n\t}\n\n\tprotected handleMoveStart(x: number, y: number): void {\n\t\tthis.initialX = x;\n\t\tthis.initialY = y;\n\t\tconst rel = this.engine.getRelativePoint(x, y);\n\t\tthis.initialXRelative = rel.x;\n\t\tthis.initialYRelative = rel.y;\n\t}\n\n\tprotected handleMove(x: number, y: number, event: React.MouseEvent | React.TouchEvent): void {\n\t\tthis.fireMouseMoved({\n\t\t\tdisplacementX: x - this.initialX,\n\t\t\tdisplacementY: y - this.initialY,\n\t\t\tvirtualDisplacementX: (x - this.initialX) / (this.engine.getModel().getZoomLevel() / 100.0),\n\t\t\tvirtualDisplacementY: (y - this.initialY) / (this.engine.getModel().getZoomLevel() / 100.0),\n\t\t\tevent\n\t\t});\n\t}\n\n\tprotected handleMoveEnd(): void {\n\t\tthis.eject();\n\t}\n\n\tabstract fireMouseMoved(event: AbstractDisplacementStateEvent);\n}\n","import { CanvasEngine } from '../CanvasEngine';\nimport { Action, ActionEvent, InputType } from '../core-actions/Action';\nimport { SyntheticEvent } from 'react';\nimport * as _ from 'lodash';\n\nexport interface StateOptions {\n\tname: string;\n}\n\nexport abstract class State<E extends CanvasEngine = CanvasEngine> {\n\tprotected engine: E;\n\tprotected actions: Action[];\n\tprotected keys: string[];\n\tprotected options: StateOptions;\n\tprotected childStates: State[];\n\n\tprivate handler1;\n\tprivate handler2;\n\n\tconstructor(options: StateOptions) {\n\t\tthis.actions = [];\n\t\tthis.keys = [];\n\t\tthis.childStates = [];\n\t\tthis.options = options;\n\t}\n\n\tsetEngine(engine: E) {\n\t\tthis.engine = engine;\n\t}\n\n\tgetOptions() {\n\t\treturn this.options;\n\t}\n\n\teject() {\n\t\tthis.engine.getStateMachine().popState();\n\t}\n\n\ttransitionWithEvent(state: State, event: ActionEvent<SyntheticEvent>) {\n\t\tthis.engine.getStateMachine().pushState(state);\n\t\tthis.engine.getActionEventBus().fireAction(event);\n\t}\n\n\tregisterAction(action: Action) {\n\t\tthis.actions.push(action);\n\t}\n\n\ttryActivateParentState(keys: string[]) {\n\t\tif (this.keys.length > 0 && !this.isKeysFullfilled(keys)) {\n\t\t\tthis.eject();\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\ttryActivateChildState(keys: string[]) {\n\t\tconst state = this.findStateToActivate(keys);\n\t\tif (state) {\n\t\t\tthis.engine.getStateMachine().pushState(state);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tfindStateToActivate(keys: string[]) {\n\t\tfor (let child of this.childStates) {\n\t\t\tif (child.isKeysFullfilled(keys)) {\n\t\t\t\treturn child;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tisKeysFullfilled(keys: string[]) {\n\t\treturn _.intersection(this.keys, keys).length === this.keys.length;\n\t}\n\n\tactivated(previous: State) {\n\t\tconst keys = this.engine.getActionEventBus().getKeys();\n\n\t\tif (this.tryActivateParentState(keys) || this.tryActivateChildState(keys)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// perhaps we need to pop again?\n\t\tthis.handler1 = this.engine.getActionEventBus().registerAction(\n\t\t\tnew Action({\n\t\t\t\ttype: InputType.KEY_DOWN,\n\t\t\t\tfire: () => {\n\t\t\t\t\tthis.tryActivateChildState(this.engine.getActionEventBus().getKeys());\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\n\t\tthis.handler2 = this.engine.getActionEventBus().registerAction(\n\t\t\tnew Action({\n\t\t\t\ttype: InputType.KEY_UP,\n\t\t\t\tfire: () => {\n\t\t\t\t\tthis.tryActivateParentState(this.engine.getActionEventBus().getKeys());\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\n\t\tfor (let action of this.actions) {\n\t\t\tthis.engine.getActionEventBus().registerAction(action);\n\t\t}\n\t}\n\n\tdeactivated(next: State) {\n\t\tif (this.handler1) {\n\t\t\tthis.handler1();\n\t\t}\n\t\tif (this.handler2) {\n\t\t\tthis.handler2();\n\t\t}\n\t\t// if this happens, we are going into heirachial state machine mode\n\t\tfor (let action of this.actions) {\n\t\t\tthis.engine.getActionEventBus().deregisterAction(action);\n\t\t}\n\t}\n}\n","import { State } from './State';\nimport * as _ from 'lodash';\nimport { CanvasEngine } from '../CanvasEngine';\nimport { BaseEvent, BaseListener, BaseObserver } from '../core/BaseObserver';\n\nexport interface StateMachineListener extends BaseListener {\n\tstateChanged?: (event: BaseEvent & { newState: State }) => any;\n}\n\nexport class StateMachine extends BaseObserver<StateMachineListener> {\n\tprotected currentState: State;\n\tprotected stateStack: State[];\n\tprotected engine: CanvasEngine;\n\n\tconstructor(engine: CanvasEngine) {\n\t\tsuper();\n\t\tthis.engine = engine;\n\t\tthis.stateStack = [];\n\t}\n\n\tgetCurrentState() {\n\t\treturn this.currentState;\n\t}\n\n\tpushState(state: State) {\n\t\tthis.stateStack.push(state);\n\t\tthis.setState(state);\n\t}\n\n\tpopState() {\n\t\tthis.stateStack.pop();\n\t\tthis.setState(_.last(this.stateStack));\n\t}\n\n\tsetState(state: State) {\n\t\tstate.setEngine(this.engine);\n\n\t\t// if no state object, get the initial state\n\t\tif (this.currentState) {\n\t\t\tthis.currentState.deactivated(state);\n\t\t}\n\t\tconst old = this.currentState;\n\t\tthis.currentState = state;\n\t\tif (this.currentState) {\n\t\t\tthis.currentState.activated(old);\n\t\t\tthis.fireEvent<'stateChanged'>(\n\t\t\t\t{\n\t\t\t\t\tnewState: state\n\t\t\t\t},\n\t\t\t\t'stateChanged'\n\t\t\t);\n\t\t}\n\t}\n}\n","import { CanvasEngine } from '../CanvasEngine';\nimport { FactoryBank } from './FactoryBank';\n\n/**\n * Base factory for all the different types of entities.\n * Gets registered with the engine, and is used to generate models\n */\nexport abstract class AbstractFactory<E extends CanvasEngine = CanvasEngine> {\n\t/**\n\t * Couples the factory with the models it generates\n\t */\n\tprotected type: string;\n\t/**\n\t * The engine gets injected when the factory is registered\n\t */\n\tprotected engine: E;\n\tprotected bank: FactoryBank;\n\n\tconstructor(type: string) {\n\t\tthis.type = type;\n\t}\n\n\tsetDiagramEngine(engine: E) {\n\t\tthis.engine = engine;\n\t}\n\n\tsetFactoryBank(bank: FactoryBank) {\n\t\tthis.bank = bank;\n\t}\n\n\tgetType(): string {\n\t\treturn this.type;\n\t}\n}\n","import { AbstractFactory } from './AbstractFactory';\nimport { BaseModel } from '../core-models/BaseModel';\nimport { CanvasEngine } from '../CanvasEngine';\n\nexport interface GenerateModelEvent {\n\tinitialConfig?: any;\n}\n\nexport abstract class AbstractModelFactory<\n\tT extends BaseModel = BaseModel,\n\tE extends CanvasEngine = CanvasEngine\n> extends AbstractFactory<E> {\n\t/**\n\t * Generates new models (the core factory pattern)\n\t */\n\tabstract generateModel(event: GenerateModelEvent): T;\n}\n","import { BaseModel } from '../core-models/BaseModel';\nimport { AbstractModelFactory } from './AbstractModelFactory';\nimport { CanvasEngine } from '../CanvasEngine';\n\nexport interface GenerateWidgetEvent<T extends BaseModel> {\n\tmodel: T;\n}\n\n/**\n * Further extends the AbstractFactory to add widget generation capability.\n */\nexport abstract class AbstractReactFactory<\n\tT extends BaseModel = BaseModel,\n\tE extends CanvasEngine = CanvasEngine\n> extends AbstractModelFactory<T, E> {\n\t/**\n\t * Generates React widgets from the model contained in the event object\n\t */\n\tabstract generateReactWidget(event: GenerateWidgetEvent<T>): JSX.Element;\n}\n","import { Toolkit } from '../Toolkit';\n\nexport interface BaseEvent {\n\tfiring: boolean;\n\tstopPropagation: () => any;\n}\n\nexport interface BaseEventProxy extends BaseEvent {\n\tfunction: string;\n}\n\n/**\n * Listeners are always in the form of an object that contains methods that take events\n */\nexport type BaseListener = {\n\t/**\n\t * Generic event that fires before a specific event was fired\n\t */\n\teventWillFire?: (event: BaseEvent & { function: string }) => void;\n\n\t/**\n\t * Generic event that fires after a specific event was fired (even if it was consumed)\n\t */\n\teventDidFire?: (event: BaseEvent & { function: string }) => void;\n} & {\n\t/**\n\t * Type for other events that will fire\n\t */\n\t[key: string]: (event: BaseEvent) => any;\n};\n\nexport interface ListenerHandle {\n\t/**\n\t * Used to degister the listener\n\t */\n\tderegister: () => any;\n\t/**\n\t * Original ID of the listener\n\t */\n\tid: string;\n\n\t/**\n\t * Original Listener\n\t */\n\tlistener: BaseListener;\n}\n\n/**\n * Base observer pattern class for working with listeners\n */\nexport class BaseObserver<L extends BaseListener = BaseListener> {\n\tprotected listeners: { [id: string]: L };\n\n\tconstructor() {\n\t\tthis.listeners = {};\n\t}\n\n\tprivate fireEventInternal(fire: boolean, k: keyof L, event: BaseEvent) {\n\t\tthis.iterateListeners((listener) => {\n\t\t\t// returning false here will instruct itteration to stop\n\t\t\tif (!fire && !event.firing) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t// fire selected listener\n\t\t\tif (listener[k]) {\n\t\t\t\tlistener[k](event as BaseEvent);\n\t\t\t}\n\t\t});\n\t}\n\n\tfireEvent<K extends keyof L>(event: Partial<Parameters<L[K]>[0]>, k: keyof L) {\n\t\tevent = {\n\t\t\tfiring: true,\n\t\t\tstopPropagation: () => {\n\t\t\t\tevent.firing = false;\n\t\t\t},\n\t\t\t...event\n\t\t};\n\n\t\t// fire pre\n\t\tthis.fireEventInternal(true, 'eventWillFire', {\n\t\t\t...event,\n\t\t\tfunction: k\n\t\t} as BaseEventProxy);\n\n\t\t// fire main event\n\t\tthis.fireEventInternal(false, k, event as BaseEvent);\n\n\t\t// fire post\n\t\tthis.fireEventInternal(true, 'eventDidFire', {\n\t\t\t...event,\n\t\t\tfunction: k\n\t\t} as BaseEventProxy);\n\t}\n\n\titerateListeners(cb: (listener: L) => any) {\n\t\tfor (let id in this.listeners) {\n\t\t\tconst res = cb(this.listeners[id]);\n\t\t\t// cancel itteration on false\n\t\t\tif (res === false) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\tgetListenerHandle(listener: L): ListenerHandle {\n\t\tfor (let id in this.listeners) {\n\t\t\tif (this.listeners[id] === listener) {\n\t\t\t\treturn {\n\t\t\t\t\tid: id,\n\t\t\t\t\tlistener: listener,\n\t\t\t\t\tderegister: () => {\n\t\t\t\t\t\tdelete this.listeners[id];\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n\n\tregisterListener(listener: L): ListenerHandle {\n\t\tconst id = Toolkit.UID();\n\t\tthis.listeners[id] = listener;\n\t\treturn {\n\t\t\tid: id,\n\t\t\tlistener: listener,\n\t\t\tderegister: () => {\n\t\t\t\tdelete this.listeners[id];\n\t\t\t}\n\t\t};\n\t}\n\n\tderegisterListener(listener: L | ListenerHandle) {\n\t\tif (typeof listener === 'object') {\n\t\t\t(listener as ListenerHandle).deregister();\n\t\t\treturn true;\n\t\t}\n\t\tconst handle = this.getListenerHandle(listener);\n\t\tif (handle) {\n\t\t\thandle.deregister();\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n}\n","import { BaseEvent, BaseListener, BaseObserver } from './BaseObserver';\nimport { AbstractFactory } from './AbstractFactory';\nimport * as _ from 'lodash';\n\nexport interface FactoryBankListener<F extends AbstractFactory = AbstractFactory> extends BaseListener {\n\t/**\n\t * Factory as added to rhe bank\n\t */\n\tfactoryAdded?: (event: BaseEvent & { factory: F }) => any;\n\n\t/**\n\t * Factory was removed from the bank\n\t */\n\tfactoryRemoved?: (event: BaseEvent & { factory: F }) => any;\n}\n\n/**\n * Store and managed Factories that extend from Abstractfactory\n */\nexport class FactoryBank<\n\tF extends AbstractFactory = AbstractFactory,\n\tL extends FactoryBankListener<F> = FactoryBankListener<F>\n> extends BaseObserver<L> {\n\tprotected factories: { [type: string]: F };\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.factories = {};\n\t}\n\n\tgetFactories(): F[] {\n\t\treturn _.values(this.factories);\n\t}\n\n\tclearFactories() {\n\t\tfor (let factory in this.factories) {\n\t\t\tthis.deregisterFactory(factory);\n\t\t}\n\t}\n\n\tgetFactory<T extends F = F>(type: string): T {\n\t\tif (!this.factories[type]) {\n\t\t\tthrow new Error(`Cannot find factory with type [${type}]`);\n\t\t}\n\t\treturn this.factories[type] as T;\n\t}\n\n\tregisterFactory(factory: F) {\n\t\tfactory.setFactoryBank(this);\n\t\tthis.factories[factory.getType()] = factory;\n\t\t// todo fixme\n\t\tthis.fireEvent<'factoryAdded'>({ factory } as any, 'factoryAdded');\n\t}\n\n\tderegisterFactory(type: string) {\n\t\tconst factory = this.factories[type];\n\t\tfactory.setFactoryBank(null);\n\t\tdelete this.factories[type];\n\t\t// todo fixme\n\t\tthis.fireEvent<'factoryRemoved'>({ factory } as any, 'factoryRemoved');\n\t}\n}\n","import * as _ from 'lodash';\nimport {\n\tBaseEntity,\n\tBaseEntityEvent,\n\tBaseEntityGenerics,\n\tBaseEntityListener,\n\tBaseEntityOptions,\n\tDeserializeEvent\n} from '../../core-models/BaseEntity';\nimport { LayerModel } from '../layer/LayerModel';\nimport { BaseModel } from '../../core-models/BaseModel';\nimport { CanvasEngine } from '../../CanvasEngine';\n\nexport interface DiagramListener extends BaseEntityListener {\n\toffsetUpdated?(event: BaseEntityEvent<CanvasModel> & { offsetX: number; offsetY: number }): void;\n\n\tzoomUpdated?(event: BaseEntityEvent<CanvasModel> & { zoom: number }): void;\n\n\tgridUpdated?(event: BaseEntityEvent<CanvasModel> & { size: number }): void;\n}\n\nexport interface DiagramModelOptions extends BaseEntityOptions {\n\toffsetX?: number;\n\toffsetY?: number;\n\tzoom?: number;\n\tgridSize?: number;\n}\n\nexport interface CanvasModelGenerics extends BaseEntityGenerics {\n\tLISTENER: DiagramListener;\n\tOPTIONS: DiagramModelOptions;\n\tLAYER: LayerModel;\n}\n\nexport class CanvasModel<G extends CanvasModelGenerics = CanvasModelGenerics> extends BaseEntity<G> {\n\tprotected layers: G['LAYER'][];\n\n\tconstructor(options: G['OPTIONS'] = {}) {\n\t\tsuper({\n\t\t\tzoom: 100,\n\t\t\tgridSize: 0,\n\t\t\toffsetX: 0,\n\t\t\toffsetY: 0,\n\t\t\t...options\n\t\t});\n\t\tthis.layers = [];\n\t}\n\n\tgetSelectionEntities(): BaseModel[] {\n\t\treturn _.flatMap(this.layers, (layer) => {\n\t\t\treturn layer.getSelectionEntities();\n\t\t});\n\t}\n\n\tgetSelectedEntities(): BaseModel[] {\n\t\treturn _.filter(this.getSelectionEntities(), (ob) => {\n\t\t\treturn ob.isSelected();\n\t\t});\n\t}\n\n\tclearSelection() {\n\t\t_.forEach(this.getSelectedEntities(), (element) => {\n\t\t\telement.setSelected(false);\n\t\t});\n\t}\n\n\tgetModels(): BaseModel[] {\n\t\treturn _.flatMap(this.layers, (layer) => {\n\t\t\treturn _.values(layer.getModels());\n\t\t});\n\t}\n\n\taddLayer(layer: LayerModel) {\n\t\tlayer.setParent(this);\n\t\tlayer.registerListener({\n\t\t\tentityRemoved: (event: BaseEntityEvent<BaseModel>): void => {}\n\t\t});\n\t\tthis.layers.push(layer);\n\t}\n\n\tremoveLayer(layer: LayerModel) {\n\t\tconst index = this.layers.indexOf(layer);\n\t\tif (index !== -1) {\n\t\t\tthis.layers.splice(index, 1);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tgetLayers() {\n\t\treturn this.layers;\n\t}\n\n\tsetGridSize(size: number = 0) {\n\t\tthis.options.gridSize = size;\n\t\tthis.fireEvent({ size: size }, 'gridUpdated');\n\t}\n\n\tgetGridPosition(pos: number) {\n\t\tif (this.options.gridSize === 0) {\n\t\t\treturn pos;\n\t\t}\n\t\treturn this.options.gridSize * Math.floor((pos + this.options.gridSize / 2) / this.options.gridSize);\n\t}\n\n\tdeserializeModel(data: ReturnType<this['serialize']>, engine: CanvasEngine) {\n\t\tconst models: {\n\t\t\t[id: string]: BaseModel;\n\t\t} = {};\n\t\tconst promises: {\n\t\t\t[id: string]: Promise<BaseModel>;\n\t\t} = {};\n\t\tconst resolvers: {\n\t\t\t[id: string]: (model: BaseModel) => any;\n\t\t} = {};\n\n\t\tconst event: DeserializeEvent = {\n\t\t\tdata: data,\n\t\t\tengine: engine,\n\t\t\tregisterModel: (model: BaseModel) => {\n\t\t\t\tmodels[model.getID()] = model;\n\t\t\t\tif (resolvers[model.getID()]) {\n\t\t\t\t\tresolvers[model.getID()](model);\n\t\t\t\t}\n\t\t\t},\n\t\t\tgetModel<T extends BaseModel>(id: string): Promise<T> {\n\t\t\t\tif (models[id]) {\n\t\t\t\t\treturn Promise.resolve(models[id]) as Promise<T>;\n\t\t\t\t}\n\t\t\t\tif (!promises[id]) {\n\t\t\t\t\tpromises[id] = new Promise((resolve) => {\n\t\t\t\t\t\tresolvers[id] = resolve;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn promises[id] as Promise<T>;\n\t\t\t}\n\t\t};\n\t\tthis.deserialize(event);\n\t}\n\n\tdeserialize(event: DeserializeEvent<this>) {\n\t\tsuper.deserialize(event);\n\t\tthis.options.offsetX = event.data.offsetX;\n\t\tthis.options.offsetY = event.data.offsetY;\n\t\tthis.options.zoom = event.data.zoom;\n\t\tthis.options.gridSize = event.data.gridSize;\n\t\t_.forEach(event.data.layers, (layer) => {\n\t\t\tconst layerOb = event.engine.getFactoryForLayer(layer.type).generateModel({\n\t\t\t\tinitialConfig: layer\n\t\t\t});\n\t\t\tlayerOb.deserialize({\n\t\t\t\t...event,\n\t\t\t\tdata: layer\n\t\t\t});\n\t\t\tthis.addLayer(layerOb);\n\t\t});\n\t}\n\n\tserialize() {\n\t\treturn {\n\t\t\t...super.serialize(),\n\t\t\toffsetX: this.options.offsetX,\n\t\t\toffsetY: this.options.offsetY,\n\t\t\tzoom: this.options.zoom,\n\t\t\tgridSize: this.options.gridSize,\n\t\t\tlayers: _.map(this.layers, (layer) => {\n\t\t\t\treturn layer.serialize();\n\t\t\t})\n\t\t};\n\t}\n\n\tsetZoomLevel(zoom: number) {\n\t\tthis.options.zoom = zoom;\n\t\tthis.fireEvent({ zoom }, 'zoomUpdated');\n\t}\n\n\tsetOffset(offsetX: number, offsetY: number) {\n\t\tthis.options.offsetX = offsetX;\n\t\tthis.options.offsetY = offsetY;\n\t\tthis.fireEvent({ offsetX, offsetY }, 'offsetUpdated');\n\t}\n\n\tsetOffsetX(offsetX: number) {\n\t\tthis.setOffset(offsetX, this.options.offsetY);\n\t}\n\n\tsetOffsetY(offsetY: number) {\n\t\tthis.setOffset(this.options.offsetX, offsetY);\n\t}\n\n\tgetOffsetY() {\n\t\treturn this.options.offsetY;\n\t}\n\n\tgetOffsetX() {\n\t\treturn this.options.offsetX;\n\t}\n\n\tgetZoomLevel() {\n\t\treturn this.options.zoom;\n\t}\n}\n","import * as React from 'react';\nimport { CanvasEngine } from '../../CanvasEngine';\nimport { TransformLayerWidget } from '../layer/TransformLayerWidget';\nimport styled from '@emotion/styled';\nimport { SmartLayerWidget } from '../layer/SmartLayerWidget';\n\nexport interface DiagramProps {\n\tengine: CanvasEngine;\n\tclassName?: string;\n}\n\nnamespace S {\n\texport const Canvas = styled.div`\n\t\tposition: relative;\n\t\tcursor: move;\n\t\toverflow: hidden;\n\t`;\n}\n\nexport class CanvasWidget extends React.Component<DiagramProps> {\n\tref: React.RefObject<HTMLDivElement>;\n\tkeyUp: any;\n\tkeyDown: any;\n\tcanvasListener: any;\n\n\tconstructor(props: DiagramProps) {\n\t\tsuper(props);\n\n\t\tthis.ref = React.createRef();\n\t\tthis.state = {\n\t\t\taction: null,\n\t\t\tdiagramEngineListener: null\n\t\t};\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.props.engine.deregisterListener(this.canvasListener);\n\t\tthis.props.engine.setCanvas(null);\n\n\t\tdocument.removeEventListener('keyup', this.keyUp);\n\t\tdocument.removeEventListener('keydown', this.keyDown);\n\t}\n\n\tregisterCanvas() {\n\t\tthis.props.engine.setCanvas(this.ref.current);\n\t\tthis.props.engine.iterateListeners((list) => {\n\t\t\tlist.rendered && list.rendered();\n\t\t});\n\t}\n\n\tcomponentDidUpdate() {\n\t\tthis.registerCanvas();\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.canvasListener = this.props.engine.registerListener({\n\t\t\trepaintCanvas: () => {\n\t\t\t\tthis.forceUpdate();\n\t\t\t}\n\t\t});\n\n\t\tthis.keyDown = (event) => {\n\t\t\tthis.props.engine.getActionEventBus().fireAction({ event });\n\t\t};\n\t\tthis.keyUp = (event) => {\n\t\t\tthis.props.engine.getActionEventBus().fireAction({ event });\n\t\t};\n\n\t\tdocument.addEventListener('keyup', this.keyUp);\n\t\tdocument.addEventListener('keydown', this.keyDown);\n\t\tthis.registerCanvas();\n\t}\n\n\trender() {\n\t\tconst engine = this.props.engine;\n\t\tconst model = engine.getModel();\n\n\t\treturn (\n\t\t\t<S.Canvas\n\t\t\t\tclassName={this.props.className}\n\t\t\t\tref={this.ref}\n\t\t\t\tonWheel={(event) => {\n\t\t\t\t\tthis.props.engine.getActionEventBus().fireAction({ event });\n\t\t\t\t}}\n\t\t\t\tonMouseDown={(event) => {\n\t\t\t\t\tthis.props.engine.getActionEventBus().fireAction({ event });\n\t\t\t\t}}\n\t\t\t\tonMouseUp={(event) => {\n\t\t\t\t\tthis.props.engine.getActionEventBus().fireAction({ event });\n\t\t\t\t}}\n\t\t\t\tonMouseMove={(event) => {\n\t\t\t\t\tthis.props.engine.getActionEventBus().fireAction({ event });\n\t\t\t\t}}\n\t\t\t\tonTouchStart={(event) => {\n\t\t\t\t\tthis.props.engine.getActionEventBus().fireAction({ event });\n\t\t\t\t}}\n\t\t\t\tonTouchEnd={(event) => {\n\t\t\t\t\tthis.props.engine.getActionEventBus().fireAction({ event });\n\t\t\t\t}}\n\t\t\t\tonTouchMove={(event) => {\n\t\t\t\t\tthis.props.engine.getActionEventBus().fireAction({ event });\n\t\t\t\t}}>\n\t\t\t\t{model.getLayers().map((layer) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<TransformLayerWidget layer={layer} key={layer.getID()}>\n\t\t\t\t\t\t\t<SmartLayerWidget layer={layer} engine={this.props.engine} key={layer.getID()} />\n\t\t\t\t\t\t</TransformLayerWidget>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</S.Canvas>\n\t\t);\n\t}\n}\n","import { BaseModel, BaseModelGenerics, BaseModelOptions } from '../../core-models/BaseModel';\nimport { CanvasModel } from '../canvas/CanvasModel';\nimport * as _ from 'lodash';\nimport { CanvasEngine } from '../../CanvasEngine';\nimport { FactoryBank } from '../../core/FactoryBank';\nimport { AbstractModelFactory } from '../../core/AbstractModelFactory';\nimport { DeserializeEvent } from '../../core-models/BaseEntity';\n\nexport interface LayerModelOptions extends BaseModelOptions {\n\tisSvg?: boolean;\n\ttransformed?: boolean;\n}\n\nexport interface LayerModelGenerics extends BaseModelGenerics {\n\tOPTIONS: LayerModelOptions;\n\tPARENT: CanvasModel;\n\tCHILDREN: BaseModel;\n\tENGINE: CanvasEngine;\n}\n\nexport abstract class LayerModel<G extends LayerModelGenerics = LayerModelGenerics> extends BaseModel<G> {\n\tprotected models: { [id: string]: G['CHILDREN'] };\n\tprotected repaintEnabled: boolean;\n\n\tconstructor(options: G['OPTIONS'] = {}) {\n\t\tsuper(options);\n\t\tthis.models = {};\n\t\tthis.repaintEnabled = true;\n\t}\n\n\t/**\n\t * This is used for deserialization\n\t */\n\tabstract getChildModelFactoryBank(engine: G['ENGINE']): FactoryBank<AbstractModelFactory<BaseModel>>;\n\n\tdeserialize(event: DeserializeEvent<this>) {\n\t\tsuper.deserialize(event);\n\t\tthis.options.isSvg = !!event.data.isSvg;\n\t\tthis.options.transformed = !!event.data.transformed;\n\t\t_.forEach(event.data.models, (model) => {\n\t\t\tconst modelOb = this.getChildModelFactoryBank(event.engine).getFactory(model.type).generateModel({\n\t\t\t\tinitialConfig: model\n\t\t\t});\n\t\t\tmodelOb.deserialize({\n\t\t\t\t...event,\n\t\t\t\tdata: model\n\t\t\t});\n\t\t\tthis.addModel(modelOb);\n\t\t});\n\t}\n\n\tserialize() {\n\t\treturn {\n\t\t\t...super.serialize(),\n\t\t\tisSvg: this.options.isSvg,\n\t\t\ttransformed: this.options.transformed,\n\t\t\tmodels: _.mapValues(this.models, (model) => {\n\t\t\t\treturn model.serialize();\n\t\t\t})\n\t\t};\n\t}\n\n\tisRepaintEnabled() {\n\t\treturn this.repaintEnabled;\n\t}\n\n\tallowRepaint(allow: boolean = true) {\n\t\tthis.repaintEnabled = allow;\n\t}\n\n\tremove() {\n\t\tif (this.parent) {\n\t\t\tthis.parent.removeLayer(this);\n\t\t}\n\t\tsuper.remove();\n\t}\n\n\taddModel(model: G['CHILDREN']) {\n\t\tmodel.setParent(this);\n\t\tthis.models[model.getID()] = model;\n\t}\n\n\tgetSelectionEntities(): Array<BaseModel> {\n\t\treturn _.flatMap(this.models, (model) => {\n\t\t\treturn model.getSelectionEntities();\n\t\t});\n\t}\n\n\tgetModels() {\n\t\treturn this.models;\n\t}\n\n\tgetModel(id: string) {\n\t\treturn this.models[id];\n\t}\n\n\tremoveModel(id: string | G['CHILDREN']): boolean {\n\t\tconst _id = typeof id === 'string' ? id : id.getID();\n\t\tif (this.models[_id]) {\n\t\t\tdelete this.models[_id];\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n}\n","import * as React from 'react';\nimport { LayerModel } from './LayerModel';\nimport { CanvasEngine } from '../../CanvasEngine';\n\nexport interface SmartLayerWidgetProps {\n\tlayer: LayerModel;\n\tengine: CanvasEngine;\n}\n\nexport class SmartLayerWidget extends React.Component<SmartLayerWidgetProps> {\n\tshouldComponentUpdate(): boolean {\n\t\treturn this.props.layer.isRepaintEnabled();\n\t}\n\n\trender() {\n\t\treturn this.props.engine.getFactoryForLayer(this.props.layer).generateReactWidget({ model: this.props.layer });\n\t}\n}\n","import * as React from 'react';\nimport styled from '@emotion/styled';\nimport { CSSProperties } from 'react';\nimport { LayerModel } from './LayerModel';\nimport { css } from '@emotion/react';\n\nexport interface TransformLayerWidgetProps {\n\tlayer: LayerModel;\n}\n\nnamespace S {\n\tconst shared = css`\n\t\ttop: 0;\n\t\tleft: 0;\n\t\tright: 0;\n\t\tbottom: 0;\n\t\tposition: absolute;\n\t\tpointer-events: none;\n\t\ttransform-origin: 0 0;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\toverflow: visible;\n\t`;\n\n\texport const DivLayer = styled.div`\n\t\t${shared}\n\t`;\n\n\texport const SvgLayer = styled.svg`\n\t\t${shared}\n\t`;\n}\n\nexport class TransformLayerWidget extends React.Component<TransformLayerWidgetProps> {\n\tconstructor(props: TransformLayerWidgetProps) {\n\t\tsuper(props);\n\t\tthis.state = {};\n\t}\n\n\tgetTransform() {\n\t\tconst model = this.props.layer.getParent();\n\t\treturn `\n\t\t\ttranslate(\n\t\t\t\t${model.getOffsetX()}px,\n\t\t\t\t${model.getOffsetY()}px)\n\t\t\tscale(\n\t\t\t\t${model.getZoomLevel() / 100.0}\n\t\t\t)\n  \t`;\n\t}\n\n\tgetTransformStyle(): CSSProperties {\n\t\tif (this.props.layer.getOptions().transformed) {\n\t\t\treturn {\n\t\t\t\ttransform: this.getTransform()\n\t\t\t};\n\t\t}\n\t\treturn {};\n\t}\n\n\trender() {\n\t\tif (this.props.layer.getOptions().isSvg) {\n\t\t\treturn <S.SvgLayer style={this.getTransformStyle()}>{this.props.children}</S.SvgLayer>;\n\t\t}\n\t\treturn <S.DivLayer style={this.getTransformStyle()}>{this.props.children}</S.DivLayer>;\n\t}\n}\n","import * as React from 'react';\nimport { AbstractReactFactory, GenerateWidgetEvent } from '../../core/AbstractReactFactory';\nimport { SelectionLayerModel } from './SelectionLayerModel';\nimport { GenerateModelEvent } from '../../core/AbstractModelFactory';\nimport { SelectionBoxWidget } from './SelectionBoxWidget';\n\nexport class SelectionBoxLayerFactory extends AbstractReactFactory<SelectionLayerModel> {\n\tconstructor() {\n\t\tsuper('selection');\n\t}\n\n\tgenerateModel(event: GenerateModelEvent): SelectionLayerModel {\n\t\treturn new SelectionLayerModel();\n\t}\n\n\tgenerateReactWidget(event: GenerateWidgetEvent<SelectionLayerModel>): JSX.Element {\n\t\treturn <SelectionBoxWidget rect={event.model.box} />;\n\t}\n}\n","import * as React from 'react';\nimport styled from '@emotion/styled';\n\nexport interface SelectionBoxWidgetProps {\n\trect: ClientRect;\n}\n\nnamespace S {\n\texport const Container = styled.div`\n\t\tposition: absolute;\n\t\tbackground-color: rgba(0, 192, 255, 0.2);\n\t\tborder: solid 2px rgb(0, 192, 255);\n\t`;\n}\n\nexport class SelectionBoxWidget extends React.Component<SelectionBoxWidgetProps> {\n\trender() {\n\t\tconst { rect } = this.props;\n\n\t\tif (!rect) return null;\n\n\t\treturn (\n\t\t\t<S.Container\n\t\t\t\tstyle={{\n\t\t\t\t\ttop: rect.top,\n\t\t\t\t\tleft: rect.left,\n\t\t\t\t\twidth: rect.width,\n\t\t\t\t\theight: rect.height\n\t\t\t\t}}\n\t\t\t/>\n\t\t);\n\t}\n}\n","import { LayerModel } from '../layer/LayerModel';\nimport { FactoryBank } from '../../core/FactoryBank';\nimport { AbstractModelFactory } from '../../core/AbstractModelFactory';\nimport { BaseModel } from '../../core-models/BaseModel';\n\nexport class SelectionLayerModel extends LayerModel {\n\tbox: ClientRect;\n\n\tconstructor() {\n\t\tsuper({\n\t\t\ttransformed: false,\n\t\t\tisSvg: false,\n\t\t\ttype: 'selection'\n\t\t});\n\t}\n\n\tsetBox(rect: ClientRect) {\n\t\tthis.box = rect;\n\t}\n\n\tgetChildModelFactoryBank(): FactoryBank<AbstractModelFactory<BaseModel>> {\n\t\t// is not used as it doesnt serialize\n\t\treturn null;\n\t}\n}\n","export * from './CanvasEngine';\nexport * from './Toolkit';\nexport * from './entities/canvas/CanvasModel';\n\nexport * from './core/AbstractFactory';\nexport * from './core/AbstractModelFactory';\nexport * from './core/AbstractReactFactory';\nexport * from './core/BaseObserver';\nexport * from './core/FactoryBank';\nexport * from './core/ModelGeometryInterface';\n\nexport * from './core-actions/Action';\nexport * from './core-actions/ActionEventBus';\n\nexport * from './core-models/BaseEntity';\nexport * from './core-models/BaseModel';\nexport * from './core-models/BasePositionModel';\n\nexport * from './entities/canvas/CanvasModel';\nexport * from './entities/canvas/CanvasWidget';\n\nexport * from './entities/layer/LayerModel';\nexport * from './entities/layer/TransformLayerWidget';\nexport * from './entities/layer/SmartLayerWidget';\n\nexport * from './entities/selection/SelectionBoxLayerFactory';\nexport * from './entities/selection/SelectionBoxWidget';\nexport * from './entities/selection/SelectionLayerModel';\n\nexport * from './widgets/PeformanceWidget';\n\nexport * from './core-state/AbstractDisplacementState';\nexport * from './core-state/State';\nexport * from './core-state/StateMachine';\n\nexport * from './states/DefaultState';\nexport * from './states/DragCanvasState';\nexport * from './states/SelectingState';\nexport * from './states/SelectionBoxState';\nexport * from './states/MoveItemsState';\n\nexport * from './actions/DeleteItemsAction';\nexport * from './actions/ZoomCanvasAction';\nexport * from './actions/PanAndZoomCanvasAction';\n","import { State } from '../core-state/State';\nimport { Action, ActionEvent, InputType } from '../core-actions/Action';\nimport { MouseEvent, TouchEvent } from 'react';\nimport { DragCanvasState } from './DragCanvasState';\nimport { SelectingState } from './SelectingState';\nimport { MoveItemsState } from './MoveItemsState';\n\nexport class DefaultState extends State {\n\tconstructor() {\n\t\tsuper({\n\t\t\tname: 'default'\n\t\t});\n\t\tthis.childStates = [new SelectingState()];\n\n\t\t// determine what was clicked on\n\t\tthis.registerAction(\n\t\t\tnew Action({\n\t\t\t\ttype: InputType.MOUSE_DOWN,\n\t\t\t\tfire: (event: ActionEvent<MouseEvent>) => {\n\t\t\t\t\tconst element = this.engine.getActionEventBus().getModelForEvent(event);\n\n\t\t\t\t\t// the canvas was clicked on, transition to the dragging canvas state\n\t\t\t\t\tif (!element) {\n\t\t\t\t\t\tthis.transitionWithEvent(new DragCanvasState(), event);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.transitionWithEvent(new MoveItemsState(), event);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\n\t\t// touch drags the canvas\n\t\tthis.registerAction(\n\t\t\tnew Action({\n\t\t\t\ttype: InputType.TOUCH_START,\n\t\t\t\tfire: (event: ActionEvent<TouchEvent>) => {\n\t\t\t\t\tthis.transitionWithEvent(new DragCanvasState(), event);\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t}\n}\n","import { AbstractDisplacementState, AbstractDisplacementStateEvent } from '../core-state/AbstractDisplacementState';\nimport { State } from '../core-state/State';\n\nexport interface DragCanvasStateOptions {\n\t/**\n\t * If enabled, the canvas is available to drag\n\t */\n\tallowDrag?: boolean;\n}\n\nexport class DragCanvasState extends AbstractDisplacementState {\n\t// store this as we drag the canvas\n\tinitialCanvasX: number;\n\tinitialCanvasY: number;\n\tconfig: DragCanvasStateOptions;\n\n\tconstructor(options: DragCanvasStateOptions = {}) {\n\t\tsuper({\n\t\t\tname: 'drag-canvas'\n\t\t});\n\t\tthis.config = {\n\t\t\tallowDrag: true,\n\t\t\t...options\n\t\t};\n\t}\n\n\tasync activated(prev) {\n\t\tsuper.activated(prev);\n\t\tthis.engine.getModel().clearSelection();\n\t\tawait this.engine.repaintCanvas(true);\n\n\t\t// we can block layer rendering because we are only targeting the transforms\n\t\tfor (let layer of this.engine.getModel().getLayers()) {\n\t\t\tlayer.allowRepaint(false);\n\t\t}\n\n\t\tthis.initialCanvasX = this.engine.getModel().getOffsetX();\n\t\tthis.initialCanvasY = this.engine.getModel().getOffsetY();\n\t}\n\n\tdeactivated(next: State) {\n\t\tsuper.deactivated(next);\n\t\tfor (let layer of this.engine.getModel().getLayers()) {\n\t\t\tlayer.allowRepaint(true);\n\t\t}\n\t}\n\n\tfireMouseMoved(event: AbstractDisplacementStateEvent) {\n\t\tif (this.config.allowDrag) {\n\t\t\tthis.engine\n\t\t\t\t.getModel()\n\t\t\t\t.setOffset(this.initialCanvasX + event.displacementX, this.initialCanvasY + event.displacementY);\n\t\t\tthis.engine.repaintCanvas();\n\t\t}\n\t}\n}\n","import { AbstractDisplacementState, AbstractDisplacementStateEvent } from '../core-state/AbstractDisplacementState';\nimport { State } from '../core-state/State';\nimport { Action, ActionEvent, InputType } from '../core-actions/Action';\nimport { BasePositionModel } from '../core-models/BasePositionModel';\nimport { Point } from '@projectstorm/geometry';\nimport { CanvasEngine } from '../CanvasEngine';\n\nexport class MoveItemsState<E extends CanvasEngine = CanvasEngine> extends AbstractDisplacementState<E> {\n\tinitialPositions: {\n\t\t[id: string]: {\n\t\t\tpoint: Point;\n\t\t\titem: BasePositionModel;\n\t\t};\n\t};\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tname: 'move-items'\n\t\t});\n\t\tthis.registerAction(\n\t\t\tnew Action({\n\t\t\t\ttype: InputType.MOUSE_DOWN,\n\t\t\t\tfire: (event: ActionEvent<React.MouseEvent>) => {\n\t\t\t\t\tconst element = this.engine.getActionEventBus().getModelForEvent(event);\n\t\t\t\t\tif (!element) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif (!element.isSelected()) {\n\t\t\t\t\t\tthis.engine.getModel().clearSelection();\n\t\t\t\t\t}\n\t\t\t\t\telement.setSelected(true);\n\t\t\t\t\tthis.engine.repaintCanvas();\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t}\n\n\tactivated(previous: State) {\n\t\tsuper.activated(previous);\n\t\tthis.initialPositions = {};\n\t}\n\n\tfireMouseMoved(event: AbstractDisplacementStateEvent) {\n\t\tconst items = this.engine.getModel().getSelectedEntities();\n\t\tconst model = this.engine.getModel();\n\t\tfor (let item of items) {\n\t\t\tif (item instanceof BasePositionModel) {\n\t\t\t\tif (item.isLocked()) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (!this.initialPositions[item.getID()]) {\n\t\t\t\t\tthis.initialPositions[item.getID()] = {\n\t\t\t\t\t\tpoint: item.getPosition(),\n\t\t\t\t\t\titem: item\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tconst pos = this.initialPositions[item.getID()].point;\n\t\t\t\titem.setPosition(\n\t\t\t\t\tmodel.getGridPosition(pos.x + event.virtualDisplacementX),\n\t\t\t\t\tmodel.getGridPosition(pos.y + event.virtualDisplacementY)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tthis.engine.repaintCanvas();\n\t}\n}\n","import { State } from '../core-state/State';\nimport { Action, ActionEvent, InputType } from '../core-actions/Action';\nimport { SelectionBoxState } from './SelectionBoxState';\nimport { MouseEvent } from 'react';\n\nexport class SelectingState extends State {\n\tconstructor() {\n\t\tsuper({\n\t\t\tname: 'selecting'\n\t\t});\n\t\tthis.keys = ['shift'];\n\n\t\tthis.registerAction(\n\t\t\tnew Action({\n\t\t\t\ttype: InputType.MOUSE_DOWN,\n\t\t\t\tfire: (event: ActionEvent<MouseEvent>) => {\n\t\t\t\t\tconst element = this.engine.getActionEventBus().getModelForEvent(event);\n\n\t\t\t\t\t// go into a selection box on the canvas state\n\t\t\t\t\tif (!element) {\n\t\t\t\t\t\tthis.transitionWithEvent(new SelectionBoxState(), event);\n\t\t\t\t\t} else {\n\t\t\t\t\t\telement.setSelected(true);\n\t\t\t\t\t\tthis.engine.repaintCanvas();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t}\n}\n","import { AbstractDisplacementState, AbstractDisplacementStateEvent } from '../core-state/AbstractDisplacementState';\nimport { State } from '../core-state/State';\nimport { SelectionLayerModel } from '../entities/selection/SelectionLayerModel';\nimport { Point, Rectangle } from '@projectstorm/geometry';\nimport { ModelGeometryInterface } from '../core/ModelGeometryInterface';\n\nexport class SelectionBoxState extends AbstractDisplacementState {\n\tlayer: SelectionLayerModel;\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tname: 'selection-box'\n\t\t});\n\t}\n\n\tactivated(previous: State) {\n\t\tsuper.activated(previous);\n\t\tthis.layer = new SelectionLayerModel();\n\t\tthis.engine.getModel().addLayer(this.layer);\n\t}\n\n\tdeactivated(next: State) {\n\t\tsuper.deactivated(next);\n\t\tthis.layer.remove();\n\t\tthis.engine.repaintCanvas();\n\t}\n\n\tgetBoxDimensions(event: AbstractDisplacementStateEvent): ClientRect {\n\t\tlet rel: Point;\n\n\t\tif ('touches' in event.event) {\n\t\t\tconst touch = event.event.touches[0];\n\t\t\trel = this.engine.getRelativePoint(touch.clientX, touch.clientY);\n\t\t} else {\n\t\t\trel = this.engine.getRelativePoint(event.event.clientX, event.event.clientY);\n\t\t}\n\n\t\treturn {\n\t\t\tleft: rel.x > this.initialXRelative ? this.initialXRelative : rel.x,\n\t\t\ttop: rel.y > this.initialYRelative ? this.initialYRelative : rel.y,\n\t\t\twidth: Math.abs(rel.x - this.initialXRelative),\n\t\t\theight: Math.abs(rel.y - this.initialYRelative),\n\t\t\tright: rel.x < this.initialXRelative ? this.initialXRelative : rel.x,\n\t\t\tbottom: rel.y < this.initialYRelative ? this.initialYRelative : rel.y\n\t\t};\n\t}\n\n\tfireMouseMoved(event: AbstractDisplacementStateEvent) {\n\t\tthis.layer.setBox(this.getBoxDimensions(event));\n\n\t\tconst relative = this.engine.getRelativeMousePoint({\n\t\t\tclientX: this.initialX,\n\t\t\tclientY: this.initialY\n\t\t});\n\t\tif (event.virtualDisplacementX < 0) {\n\t\t\trelative.x -= Math.abs(event.virtualDisplacementX);\n\t\t}\n\t\tif (event.virtualDisplacementY < 0) {\n\t\t\trelative.y -= Math.abs(event.virtualDisplacementY);\n\t\t}\n\t\tconst rect = new Rectangle(relative, Math.abs(event.virtualDisplacementX), Math.abs(event.virtualDisplacementY));\n\n\t\tfor (let model of this.engine.getModel().getSelectionEntities()) {\n\t\t\tif ((model as unknown as ModelGeometryInterface).getBoundingBox) {\n\t\t\t\tconst bounds = (model as unknown as ModelGeometryInterface).getBoundingBox();\n\t\t\t\tif (rect.containsPoint(bounds.getTopLeft()) && rect.containsPoint(bounds.getBottomRight())) {\n\t\t\t\t\tmodel.setSelected(true);\n\t\t\t\t} else {\n\t\t\t\t\tmodel.setSelected(false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.engine.repaintCanvas();\n\t}\n}\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport { BaseModel } from '../core-models/BaseModel';\n\nexport interface PeformanceWidgetProps {\n\tchildren: () => JSX.Element;\n\tserialized: object;\n\tmodel: BaseModel;\n}\n\nexport interface PeformanceWidgetState {}\n\nexport class PeformanceWidget extends React.Component<PeformanceWidgetProps, PeformanceWidgetState> {\n\tshouldComponentUpdate(\n\t\tnextProps: Readonly<PeformanceWidgetProps>,\n\t\tnextState: Readonly<PeformanceWidgetState>,\n\t\tnextContext: any\n\t): boolean {\n\t\tif (!this.props.model.performanceTune()) {\n\t\t\treturn true;\n\t\t}\n\t\t// deserialization event\n\t\tif (this.props.model !== nextProps.model) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// change event\n\t\treturn !_.isEqual(this.props.serialized, nextProps.serialized);\n\t}\n\n\trender() {\n\t\treturn this.props.children();\n\t}\n}\n","module.exports = require(\"@emotion/react\");","module.exports = require(\"@emotion/styled\");","module.exports = require(\"@projectstorm/geometry\");","module.exports = require(\"lodash\");","module.exports = require(\"react\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(418);\n"],"sourceRoot":""}